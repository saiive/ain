# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master
- 1.*

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '3921c1d1-a9db-4a6a-ab5a-d5c1831052af'
  imageRepositoryBase: 'defichain-base'
  imageRepository: 'defichain'
  containerRegistry: 'defiwallet.azurecr.io'
  dockerfilePathBase: 'contrib/dockerfiles/x86_64-pc-linux-gnu.dockerfile'
  dockerfilePath: 'contrib/dockerfiles/dockerhub/p3_x86_64-pc-linux-gnu.dockerfile'
  tag: '$(Build.BuildId)'
  RELEASE_VERSION: 'alpha'
  BUILD_VERSION: '1.8.3'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/develop') }}:
    addImageTags: |
      beta
  # add docker image tags for builds triggered for tag branch (we assume that we only tag on master)
  # (used instead of trigger for master branch: see https://tributech.atlassian.net/wiki/spaces/TM/pages/99614725/Branches+Build-Pipelines+Tags#Issue-with-merge%2Fbuild-for-master-branch)
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags') }}:
    addImageTags: |
      beta
      $(RELEASE_VERSION)
      
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    addImageTags: |
      beta
      stable
      latest
      $(RELEASE_VERSION)
      
  # add docker image tags for builds triggered from release branch
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/release') }}:
    addImageTags: |
      beta
      $(RELEASE_VERSION)

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: BuildAndPublish
    steps:
    - checkout: self
      submodules: true
      persistCredentials: true
    - script: |
        VERSION=$(echo "$(Build.SourceBranch)" | grep -o '[0-9]\+\.[0-9]\+\(\.[0-9]\+\)\?')
        echo "##vso[task.setvariable variable=RELEASE_VERSION;]$VERSION"
      
    displayName: 'Parse and set release version'
    condition: or(startsWith(variables['Build.SourceBranch'], 'refs/heads/release'), startsWith(variables['Build.SourceBranch'], 'refs/tags'), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))
    
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build base image
      inputs:
        command: build
        repository: $(imageRepositoryBase)
        dockerfile: $(dockerfilePathBase)
        buildContext: $(Build.SourcesDirectory)
        arguments: --build-arg VERSION=$(tag) --build-arg BUILD_VERSION=$(BUILD_VERSION) 
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          alpha
          ${{ variables.addImageTags }}

    - task: Docker@2
      displayName: Push base image
      inputs:
        command: push
        repository: $(imageRepositoryBase)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          alpha
          ${{ variables.addImageTags }}          

          
    - task: Docker@2
      displayName: Build defid image
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        buildContext: $(Build.SourcesDirectory)
        arguments: --build-arg VERSION=$(tag) --build-arg BUILD_VERSION=$(BUILD_VERSION)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          alpha
          ${{ variables.addImageTags }}
          
    - task: Docker@2
      displayName: Push defid image
      inputs:
        command: push
        repository: $(imageRepository)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          alpha
          ${{ variables.addImageTags }}          
